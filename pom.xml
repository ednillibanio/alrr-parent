<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<name>alrr-parent</name>
	<modelVersion>4.0.0</modelVersion>
	<version>1.0.0-SNAPSHOT</version>
	<groupId>br.leg.rr.al</groupId>
	<artifactId>alrr-parent</artifactId>
	<packaging>pom</packaging>
	<developers>
		<developer>
			<id>ednil</id>
			<name>Ednil Libanio da Costa Junior</name>
			<email>ednil.libanio@gmail.com</email>
		</developer>
	</developers>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>


		<!-- Define the version of the JBoss BOMs we want to import to specify 
			tested stacks. -->
		<version.jboss.bom>15.0.1.Final</version.jboss.bom>
		<version.wildfly>15.0.1.Final</version.wildfly>

		<version.wildfly.maven.plugin>2.0.1.Final</version.wildfly.maven.plugin>

		<version.ear.plugin>3.0.1</version.ear.plugin>
		<version.ejb.plugin>3.0.1</version.ejb.plugin>
		<version.jar.plugin>3.1.1</version.jar.plugin>
		<version.surefire.plugin>2.22.0</version.surefire.plugin>
		<version.failsafe.plugin>2.22.0</version.failsafe.plugin>
		<version.maven.plugin>2.7</version.maven.plugin>
		<version.ejb>3.2</version.ejb>

		<!-- maven plugins -->
		<version.install.plugin>2.5.2</version.install.plugin>
		<version.apache.commons.lang3>3.7</version.apache.commons.lang3>

		<!-- other plugin versions -->
		<version.surefire.plugin>2.22.0</version.surefire.plugin>
		<version.war.plugin>3.2.2</version.war.plugin>
		<version.helper.plugin>3.0.0</version.helper.plugin>

		<!-- maven-compiler-plugin -->
		<version.compiler.plugin>3.8.0</version.compiler.plugin>
		<java.version>11</java.version>
		<maven.compiler.target>11</maven.compiler.target>
		<maven.compiler.source>11</maven.compiler.source>


		<version.alrr.parent>1.0.0-SNAPSHOT</version.alrr.parent>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.wildfly.bom</groupId>
				<artifactId>wildfly-javaee8-with-tools</artifactId>
				<version>${version.jboss.bom}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>1.7.25</version>
			</dependency>
			<dependency>
				<groupId>br.leg.rr.al</groupId>
				<artifactId>alrr-ejb-dep</artifactId>
				<version>${version.alrr.parent}</version>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>br.leg.rr.al</groupId>
				<artifactId>alrr-jpa-dep</artifactId>
				<version>${version.alrr.parent}</version>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>br.leg.rr.al</groupId>
				<artifactId>alrr-utils-dep</artifactId>
				<version>${version.alrr.parent}</version>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>br.leg.rr.al</groupId>
				<artifactId>alrr-web-dep</artifactId>
				<version>${version.alrr.parent}</version>
				<type>pom</type>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<!-- This plugin helps finding the latest plugin or dependency versions 
					for your modules. Open up the terminal and execute this command to find the 
					plugin versions you have to update: versions:display-plugin-updates -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>${version.maven.plugin}</version>
					<configuration>
						<generateBackupPoms>false</generateBackupPoms>
					</configuration>
				</plugin>
				<!-- The WildFly plugin deploys your ear to a local JBoss AS container -->
				<!-- Due to Maven's lack of intelligence with EARs we need to configure 
					the wildfly maven plugin to skip deployment for all modules. We then enable 
					it specifically in the ear module. -->
				<plugin>
					<groupId>org.wildfly.plugins</groupId>
					<artifactId>wildfly-maven-plugin</artifactId>
					<version>${version.wildfly.maven.plugin}</version>
					<inherited>true</inherited>
					<configuration>
						<skip>true</skip>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${version.install.plugin}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${version.jar.plugin}</version>
					<configuration>
						<excludes>src/main/resources/sql/**</excludes>
						<archive>
							<addMavenDescriptor>false</addMavenDescriptor>
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${version.war.plugin}</version>
					<configuration>
						<archive>
							<addMavenDescriptor>false</addMavenDescriptor>
						</archive>
						<packagingExcludes>.gitignore</packagingExcludes>
						<warSourceDirectory>${basedir}/webapp</warSourceDirectory>
						<failOnMissingWebXml>false</failOnMissingWebXml>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${version.compiler.plugin}</version>
					<configuration>
						<source>${maven.compiler.source}</source>
						<target>${maven.compiler.target}</target>
						<debug>true</debug>
						<optimize>true</optimize>
						<forceJavacCompilerUse>true</forceJavacCompilerUse>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-ejb-plugin</artifactId>
					<version>${version.ejb.plugin}</version>
					<configuration>
						<ejbVersion>${version.ejb}</ejbVersion>
						<generateClient>true</generateClient>
						<archive>
							<addMavenDescriptor>false</addMavenDescriptor>
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-ear-plugin</artifactId>
					<version>${version.ear.plugin}</version>
					<configuration>
						<version>7</version>
						<outputFileNameMapping>@{artifactId}@-@{version}@.@{extension}@</outputFileNameMapping>
						<generateApplicationXml>true</generateApplicationXml>
						<defaultLibBundleDir>lib/</defaultLibBundleDir>
						<skinnyWars>true</skinnyWars>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.22.0</version>
					<configuration>
						<argLine>
							--illegal-access=permit
						</argLine>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>2.22.0</version>
					<configuration>
						<argLine>
							--illegal-access=permit
						</argLine>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>${version.helper.plugin}</version>
					<executions>
						<execution>
							<id>add-source</id>
							<phase>generate-sources</phase>
							<goals>
								<goal>add-source</goal>
							</goals>
							<configuration>
								<sources>
									<source>target/generated-sources/annotations</source>
								</sources>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<!-- COMENTEI PRA TESTAR. RESPONSÁVEL POR INSTALAR NO REPOS LOCAL. -->
			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-install-plugin</artifactId> 
				</plugin> -->
		</plugins>
	</build>
	<modules>
		<module>alrr-ejb-dep</module>
		<module>alrr-web-dep</module>
		<module>alrr-jpa-dep</module>
		<module>alrr-utils-dep</module>
	</modules>
</project>